{"version":3,"sources":["data.js","ui/Button.js","components/Filters/LaunchYear.js","components/Filters/SuccessfulLanding.js","components/Filters/SuccessfulLaunch.js","components/Filters/Filters.js","components/spacePrograms/Program.js","components/spacePrograms/SpacePrograms.js","ui/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["i","years","push","Button","text","clicked","className","onClick","LaunchYear","setLaunchYear","map","year","index","to","SuccessfulLanding","setSuccessfulLanding","SuccessfulLaunch","setSuccessfulLaunch","Filters","Program","img","missionName","flightNumber","missionIds","launchSuccess","launchYear","landingSuccess","src","alt","length","id","SpacePrograms","programs","successfulLaunch","successfulLanding","console","log","program","links","mission_patch_small","mission_name","flight_number","mission_id","launch_year","Spinner","class","App","useState","setPrograms","isLoading","setIsLoading","useEffect","axios","get","then","response","data","newPrograms","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.846960a0.chunk.js","sourcesContent":["export const years=[];\r\nlet i;\r\nfor(i=6;i<21;i++)\r\n{\r\n    years.push(2000+i);\r\n}\r\n\r\n","import React from 'react'\r\n\r\nconst Button = ({text,clicked}) => {\r\n   \r\n    return (\r\n        <button className=\"btn\" onClick={()=>clicked(text)}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport {years} from '../../data';\r\nimport Button from '../../ui/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst LaunchYear = ({setLaunchYear}) => {\r\n    return (\r\n        <div>\r\n            {years.map((year,index)=>{\r\n                return <Link key={index} to={`/${year}`}><Button text={year} clicked={setLaunchYear}/></Link>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LaunchYear\r\n","import React from 'react'\r\n\r\nconst SuccessfulLanding = ({setSuccessfulLanding}) => {\r\n    return (\r\n        <div>\r\n            <button \r\n            className=\"btn\"\r\n            onClick={()=>setSuccessfulLanding(true)}>True</button>\r\n            <button \r\n            className=\"btn\"\r\n            onClick={()=>setSuccessfulLanding(false)}>False</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessfulLanding\r\n","import React from 'react'\r\n\r\nconst SuccessfulLaunch = ({setSuccessfulLaunch}) => {\r\n    return (\r\n        <div>\r\n            <button \r\n            className=\"btn\"\r\n            onClick={()=>setSuccessfulLaunch(true)}>True</button>\r\n            <button \r\n            className=\"btn\"\r\n            onClick={()=>setSuccessfulLaunch(false)}>False</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessfulLaunch\r\n","import React from 'react'\r\n\r\nimport LaunchYear from './LaunchYear'\r\nimport SuccessfulLanding from './SuccessfulLanding'\r\nimport SuccessfulLaunch from './SuccessfulLaunch'\r\n\r\nconst Filters = ({setLaunchYear,setSuccessfulLaunch,\r\n      setSuccessfulLanding}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 \r\n      className=\"heading\">SpaceX Launch Programs</h2>\r\n            </div>\r\n        <div className=\"filters\">\r\n            \r\n           <div>\r\n               <h3>Launch Year</h3>\r\n               <hr className=\"underline\"/>\r\n                <LaunchYear setLaunchYear={setLaunchYear}\r\n                />\r\n           </div>\r\n           \r\n           <div>\r\n               <h3>Successful Launch</h3>\r\n               <hr className=\"underline\"/>\r\n                <SuccessfulLaunch setSuccessfulLaunch={setSuccessfulLaunch}/>\r\n           </div>\r\n            \r\n           <div>\r\n               <h3>Successful Landing</h3>\r\n               <hr className=\"underline\"/>\r\n                <SuccessfulLanding\r\n                setSuccessfulLanding={setSuccessfulLanding}/>\r\n           </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","import React from 'react'\r\n\r\nconst Program = ({img,missionName,flightNumber,missionIds,launchSuccess,launchYear,landingSuccess}) => {\r\n    return (\r\n        <div className=\"program\">\r\n            <img \r\n            className=\"img\" \r\n            src={img} \r\n            alt=\"space\"\r\n            />\r\n            <div className=\"title\">\r\n                <h2>{missionName} #{flightNumber}</h2>   \r\n            </div>\r\n            <div className=\"info\">\r\n                <div className=\"missionid\">\r\n              <strong>Mission IDs : </strong> \r\n              {missionIds.length ===0 ? \"None\" :\r\n                 missionIds.map((id,index)=>{\r\n                     return <li key={index}>{id}</li>\r\n                 })\r\n              }\r\n            </div>\r\n            <div>\r\n                <strong>\r\n                    Launch Year</strong> : {launchYear}\r\n            </div>\r\n            <div>\r\n                <strong>Successful Launch</strong> : {launchSuccess\r\n                ? \"Yes\" : \"No\"}\r\n            </div>\r\n            <div>\r\n                <strong>Successful Landing</strong> : {landingSuccess ? \"Yes\" : \"No\"}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Program\r\n","import React from 'react'\r\n\r\nimport Program from './Program'\r\n\r\nconst SpacePrograms = ({programs,successfulLaunch,successfulLanding}) => {\r\n    console.log(programs)\r\n    return (\r\n        <div className=\"programs\">\r\n            {programs.map((program,index)=>\r\n                 \r\n                (\r\n                    <Program \r\n                        key={index} \r\n                        img={program.links.mission_patch_small} \r\n                        missionName={program.mission_name}\r\n                        flightNumber={program.flight_number}missionIds={program.mission_id}\r\n                        launchYear={program.launch_year}\r\n                        launchSuccess={successfulLaunch}\r\n                        landingSuccess={successfulLanding}\r\n                    />\r\n                    )\r\n            )}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SpacePrograms\r\n","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div class=\"loader\">Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Filters from './components/Filters/Filters';\nimport SpacePrograms from './components/spacePrograms/SpacePrograms';\nimport Spinner from './ui/Spinner';\n\nconst App = () => {\n  // usestate hook used for storing and manipulating state for launch year,launch status,landing status, programs information and loading status \n  const [launchYear,setLaunchYear]=useState();\n  const [successfulLaunch,setSuccessfulLaunch]=useState(true);\n  const [successfulLanding,setSuccessfulLanding]=useState(true);\n  const [programs,setPrograms]=useState([]);\n  const [isLoading,setIsLoading]=useState(true);\n  \n  //first useffect which will get executed only once in the begining for fetching the data for all programs\n  useEffect(()=>{\n    setIsLoading(true);\n    axios.get(\"https://api.spacexdata.com/v3/launches?limit=100\").then(response=>{\n      setIsLoading(false);\n     setPrograms(response.data);\n    });\n  },[])\n\n  //useffect for fetching the data as the state variable changes\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(\"https://api.spacexdata.com/v3/launches?limit=100&launch_success=\"+successfulLaunch+\"&land_success=\"+successfulLanding+\"&launch_year=\"+launchYear).then(response=>{\n      setIsLoading(false);\n      const newPrograms=response.data;\n      setPrograms(newPrograms);\n    });\n  }, [launchYear,successfulLaunch,successfulLanding])\n\n\n  return (\n    <div>\n      <div> \n        {/* filters components for looking  */}\n          <Filters \n          setSuccessfulLaunch={setSuccessfulLaunch}\n          setSuccessfulLanding={setSuccessfulLanding}\n          setLaunchYear={setLaunchYear}\n          />\n      </div>\n      \n      <div>\n        {/* routes for home page and for rendered programs for each year */}\n        {isLoading ? <Spinner/> : (<div>\n          <Route \n          path='/:year' \n          component={()=>\n            <SpacePrograms \n            programs={programs} \n            successfulLaunch={successfulLaunch}\n            successfulLanding={successfulLaunch}\n            />\n            }>\n\n          </Route>\n          <Route \n          exact \n          path='/' \n          component={()=>\n            <SpacePrograms \n              programs={programs} \n              successfulLaunch={successfulLaunch}\n              successfulLanding={successfulLaunch}\n            />\n            }>\n          </Route>\n        </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='/spaceprogram/'><React.StrictMode>\n    <App />\n  </React.StrictMode></BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}